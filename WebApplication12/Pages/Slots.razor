@page "/"
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Net.Http.Json
@using WebApplication12.Shared.Contracts
@using Newtonsoft.Json
@inject HttpClient Http

<p>
    <div>
        Finding Slots In <em>DELHI</em>
    </div>
</p>
<div class="grid-container" style="margin:0;padding:0">
    <div class="grid-x">
        <div class="cell small-12 medium-3 large-3">
            <form>
                <label for="birthday">Date: </label>
                <input type="date" id="birthday" name="birthday" @bind-value="@datetime">
            </form>
        </div>
    </div>
</div>

@*<p>

    <span>
        Enter Date : dd/mm/yyyy(optional)
    </span>
    <span>
        <input placeholder="@date" @bind-value="@date" />
    </span>
</p>*@
<form>
    <div>
        @foreach (var item in Enum.GetNames(typeof(Question.VaccineType)))
        {
            <span>
                <input type="radio" name="question1" id="@item" value="@item" @onchange="SelectionChangedVaccineType" checked=@(selectedAnswer.Equals(item,StringComparison.OrdinalIgnoreCase)) />
                <label for="@item">@item</label>
            </span>
        }
    </div>
</form>
<form>
    <div>
        @foreach (var item in Enum.GetNames(typeof(Question.Dosage)))
        {
            <span>
                <input type="radio" name="question1" id="@item" value="@item" @onchange="SelectionChangedDosage" checked=@(selectedAnswer.Equals(item,StringComparison.OrdinalIgnoreCase)) />
                <label for="@item">@item</label>
            </span>
        }
    </div>
</form>
<form>
    <div>
        @foreach (var item in Enum.GetNames(typeof(Question.AgeGroup)))
        {
            <span>
                <input type="radio" name="question1" id="@item" value="@item" @onchange="SelectionChangedAgeGroup" checked=@(selectedAnswer.Equals(item,StringComparison.OrdinalIgnoreCase)) />
                <label for="@item">@item</label>
            </span>
        }
    </div>
</form>
@if (!string.IsNullOrEmpty(vaccine) && !string.IsNullOrEmpty(dose) && !string.IsNullOrEmpty(ageGrp))
{
    <button class="buttonarjun" @onclick="FindCenters">Find Centers</button>
}
@if (flag)
{
    @if (flagSlot)
    {
        <p style="margin-top:10px"><em>Loading...</em></p>
    }
    else
    {
        <div class="grid-container">
            <div class="grid-x">
                <div class="cell">
                    <div class="show-for-small-only">
                        @if (slotResponse.slot.Count != 0)
                        {
                            <p style="margin-top:10px">
                                Slots Available: @slotResponse.slot.Count
                            </p>
                            <div class="grid-container">
                                <div class="grid-x">

                                    @foreach (var slots in slotResponse.slot)
                                    {
                                        <div class="cell small-12 panel callout radius">
                                            @if (slots.available_capacity_dose1 != 0)
                                            {
                                                <p><h4 style="display:inline;font-size:large">Dose Available: </h4><span>@slots.available_capacity_dose1</span></p>
                                            }
                                            else if (slots.available_capacity_dose2 != 0)
                                            {
                                                <p><h4 style="display:inline;font-size:large">Dose Available: </h4><span>@slots.available_capacity_dose2</span></p>
                                            }
                                            <p><h4 style="display:inline;font-size:large">Address: </h4><span>@slots.address</span></p>
                                            <p><h4 style="display:inline;font-size:large">Name: </h4><span>@slots.name</span></p>
                                            <p><h4 style="display:inline;font-size:large">Fee: </h4><span>@slots.fee</span></p>
                                            <p><h4 style="display:inline;font-size:large">Age Limit: </h4><span>@slots.min_age_limit</span></p>
                                            <p><h4 style="display:inline;font-size:large">Pincode: </h4><span>@slots.pincode</span></p>
                                            <p><h4 style="display:inline;font-size:large">Vaccine: </h4><span>@slots.vaccine</span></p>
                                            <a href="https://selfregistration.cowin.gov.in/" class="button" target="_blank">Book Vaccination</a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    <div class="show-for-medium">
                        @if (slotResponse.slot.Count != 0)
                        {
                            <p class="margin-top-10">
                                Slots Available: @slotResponse.slot.Count
                            </p>
                            <div class="grid-container">
                                <div class="grid-x">
                                    <div class="cell small-12">
                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <th>Dose</th>
                                                    <th>Address</th>
                                                    <th>District Name</th>
                                                    <th>Fee</th>
                                                    <th>Min_Age_Limit</th>
                                                    <th>Name</th>
                                                    <th>Pincode</th>
                                                    <th>State Name</th>
                                                    <th>Vaccine</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var slots in slotResponse.slot)
                                                {
                                                    <tr>
                                                        @if (slots.available_capacity_dose1 != 0)
                                                        {
                                                            <td>@slots.available_capacity_dose1</td>
                                                        }
                                                        else if (slots.available_capacity_dose2 != 0)
                                                        {
                                                            <td>@slots.available_capacity_dose2</td>
                                                        }

                                                        <td>@slots.address</td>
                                                        <td>@slots.district_name</td>
                                                        <td>@slots.fee</td>
                                                        <td>@slots.min_age_limit</td>
                                                        <td>@slots.name</td>
                                                        <td>@slots.pincode</td>
                                                        <td>@slots.state_name</td>
                                                        <td>@slots.vaccine</td>
                                                    </tr>


                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                        }
                        else
                        {
                            <p class="margin-top-10">Sorry , No Slots are Present</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}


@code {
    private string responseBody;
    private string forecasts;
    private string dose;
    private string vaccine;
    private string ageGrp;
    private bool flagSlot;
    private string date;
    private string doseinp;

    private string buttondisabled = "";

    private List<string> templates;

    private bool flag;
    private bool finalFlag;

    public List<string> pincodes;

    public SlotResponse slotResponse;

    string vaccineTy = "";
    string dosage = "";
    string selectedAnswer = "";
    string age = "";

    DateTime datetime= DateTime.UtcNow.Date;

    void SelectionChanged(ChangeEventArgs args)
    {
        selectedAnswer = args.Value.ToString();
    }

    void SelectionChangedVaccineType(ChangeEventArgs args)
    {
        vaccineTy = args.Value.ToString();
        vaccine = vaccineTy;
    }

    void SelectionChangedDosage(ChangeEventArgs args)
    {
        dosage = args.Value.ToString();
        dose = dosage;
        doseinp = dosage;
    }
    void SelectionChangedAgeGroup(ChangeEventArgs args)
    {
        age = args.Value.ToString();
        ageGrp = age;
    }

    Question question = new Question { QuestionText = "What is the color of the sky" };


    public class Question
    {
        public string QuestionText { get; set; }
        public enum Colors { Red, Green, Blue, Yellow };
        public enum VaccineType { Covishield, Covaxin };
        public enum AgeGroup { Above45, Below45 };
        public enum Dosage { FirstDose, SecondDose };

    }

    protected override Task OnInitializedAsync()
    {
        flag = false;
        flagSlot = true;
        DateTime dateTime = DateTime.UtcNow.Date;
        date = dateTime.ToString("dd/MM/yyyy");
        pincodes = new List<string>();
        return base.OnInitializedAsync();
    }

    public async Task FindCenters()
    {
        if (flag)
        {
            flag = false;
        }
        slotResponse = new SlotResponse();
        flag = true;
        flagSlot = true;
        slotResponse.slot = new List<slot>();

        var tempValue = datetime.ToString("dd/MM/yyyy");
        date = tempValue;
        
        var dateinp = date;
        if (string.IsNullOrEmpty(date))
        {
            dateinp = "nothing";
        }
        else
        {
            dateinp = dateinp.Replace('/', '@');
        }

        try
        {
            dose = doseinp;
            if (dose.ToLower() == "first")
            {
                dose = "available_capacity_dose1";
            }
            else if (dose.ToLower() == "second")
            {
                dose = "available_capacity_dose2";
            }
            for (int i = 110001; i <= 110096; i++)
            {
                pincodes.Add(i.ToString());
            }
            var age = 0;
            if (ageGrp.ToLower() == "above45")
            {
                age = 45;
            }
            if (date == "nothing")
            {
                DateTime dateTime = DateTime.UtcNow.Date;
                date = dateTime.ToString("dd/MM/yyyy");
            }
            if (vaccine.Contains("x") || vaccine.Contains("X"))
            {
                vaccine = "COVAXIN";
            }
            else
            {
                vaccine = "COVISHIELD";
            }
            foreach (var pincode in pincodes)
            {
                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("GET"),
                    RequestUri = new Uri("https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=" + pincode + "&date=" + date + "&vaccine=" + vaccine)
                };
                var response = await Http.SendAsync(requestMessage);
                var responseStatusCode = response.StatusCode;
                var asd = responseStatusCode.ToString();
                if (responseStatusCode.ToString() == "OK")
                {
                    var strContent = await response.Content.ReadAsStringAsync();
                    var responseFromSlot = JsonConvert.DeserializeObject<Root>(strContent);
                    foreach (var value in responseFromSlot.sessions)
                    {
                        slot slot = new slot();
                        if (age >= 45)
                        {
                            if (dose == "available_capacity_dose1")
                            {
                                if (value.available_capacity_dose1 > 0 && vaccine == value.vaccine && value.min_age_limit == 45)
                                {
                                    slot.address = value.address;
                                    slot.available_capacity_dose1 = value.available_capacity_dose1;
                                    slot.district_name = value.district_name;
                                    slot.fee = value.fee;
                                    slot.pincode = value.pincode;
                                    slot.name = value.name;
                                    slot.vaccine = value.vaccine;
                                    slot.min_age_limit = value.min_age_limit;
                                    slot.state_name = value.state_name;
                                    slotResponse.slot.Add(slot);
                                    flagSlot = false;
                                    StateHasChanged();
                                }
                            }
                            else if (value.available_capacity_dose2 > 0 && vaccine == value.vaccine && value.min_age_limit == 45)
                            {
                                slot.address = value.address;
                                slot.available_capacity_dose1 = value.available_capacity_dose2;
                                slot.district_name = value.district_name;
                                slot.fee = value.fee;
                                slot.pincode = value.pincode;
                                slot.name = value.name;
                                slot.vaccine = value.vaccine;
                                slot.min_age_limit = value.min_age_limit;
                                slot.state_name = value.state_name;
                                slotResponse.slot.Add(slot);
                                flagSlot = false;
                                StateHasChanged();
                            }
                        }
                        else
                        {
                            if (dose == "available_capacity_dose1")
                            {
                                if (value.available_capacity_dose1 > 0 && vaccine == value.vaccine && value.min_age_limit == 18)
                                {
                                    slot.address = value.address;
                                    slot.available_capacity_dose1 = value.available_capacity_dose1;
                                    slot.district_name = value.district_name;
                                    slot.fee = value.fee;
                                    slot.pincode = value.pincode;
                                    slot.name = value.name;
                                    slot.vaccine = value.vaccine;
                                    slot.min_age_limit = value.min_age_limit;
                                    slot.state_name = value.state_name;
                                    slotResponse.slot.Add(slot);
                                    flagSlot = false;
                                    StateHasChanged();
                                }
                            }
                            else if (value.available_capacity_dose2 > 0 && vaccine == value.vaccine && value.min_age_limit == 18)
                            {
                                slot.address = value.address;
                                slot.available_capacity_dose1 = value.available_capacity_dose2;
                                slot.district_name = value.district_name;
                                slot.fee = value.fee;
                                slot.pincode = value.pincode;
                                slot.name = value.name;
                                slot.min_age_limit = value.min_age_limit;
                                slot.state_name = value.state_name;
                                slot.vaccine = value.vaccine;
                                slotResponse.slot.Add(slot);
                                flagSlot = false;
                                StateHasChanged();
                            }
                        }
                    }
                }
            }
            if (slotResponse.slot.Count != 0)
            {
                flagSlot = false;
                StateHasChanged();
            }
            else
            {
                flagSlot = false;
                StateHasChanged();
            }

        }
        catch (Exception ex)
        {
            throw (ex);
        }
    }
}