#pragma checksum "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "718f7d83f465e499687f27931fdaa6ec27a00840"
// <auto-generated/>
#pragma warning disable 1591
namespace WebApplication12.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 3 "E:\leaningnetlify\WebApplication12\WebApplication12\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\leaningnetlify\WebApplication12\WebApplication12\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\leaningnetlify\WebApplication12\WebApplication12\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\leaningnetlify\WebApplication12\WebApplication12\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\leaningnetlify\WebApplication12\WebApplication12\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\leaningnetlify\WebApplication12\WebApplication12\_Imports.razor"
using WebApplication12;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\leaningnetlify\WebApplication12\WebApplication12\_Imports.razor"
using WebApplication12.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
using System.Net.Http.Headers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
using WebApplication12.Shared.Contracts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/counter")]
    public partial class Counter : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<p>\r\n    <div>\r\n        Finding Slots In <em>DELHI</em>\r\n    </div>\r\n</p>\r\n");
            __builder.OpenElement(1, "p");
            __builder.AddMarkupContent(2, "\r\n    ");
            __builder.AddMarkupContent(3, "<span>\r\n        Enter Date : dd/mm/yyyy(optional)\r\n    </span>\r\n    ");
            __builder.OpenElement(4, "span");
            __builder.AddMarkupContent(5, "\r\n        ");
            __builder.OpenElement(6, "input");
            __builder.AddAttribute(7, "placeholder", 
#nullable restore
#line 19 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                             date

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(8, "value", Microsoft.AspNetCore.Components.BindConverter.FormatValue(
#nullable restore
#line 19 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                                 date

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(9, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => date = __value, date));
            __builder.SetUpdatesAttributeName("value");
            __builder.CloseElement();
            __builder.AddMarkupContent(10, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(11, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(12, "\r\n");
            __builder.OpenElement(13, "p");
            __builder.AddMarkupContent(14, "\r\n    ");
            __builder.AddMarkupContent(15, "<span>\r\n        Enter Dose : first or second\r\n    </span>\r\n    ");
            __builder.OpenElement(16, "span");
            __builder.AddMarkupContent(17, "\r\n        ");
            __builder.OpenElement(18, "input");
            __builder.AddAttribute(19, "placeholder", "First/Second");
            __builder.AddAttribute(20, "value", Microsoft.AspNetCore.Components.BindConverter.FormatValue(
#nullable restore
#line 27 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                                        doseinp

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(21, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => doseinp = __value, doseinp));
            __builder.SetUpdatesAttributeName("value");
            __builder.CloseElement();
            __builder.AddMarkupContent(22, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(23, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(24, "\r\n");
            __builder.OpenElement(25, "p");
            __builder.AddMarkupContent(26, "\r\n    ");
            __builder.AddMarkupContent(27, "<span>\r\n        Enter Vaccine : COVISHIELD or COVAXIN\r\n    </span>\r\n    ");
            __builder.OpenElement(28, "span");
            __builder.AddMarkupContent(29, "\r\n        ");
            __builder.OpenElement(30, "input");
            __builder.AddAttribute(31, "placeholder", "Covishield/Covaxin");
            __builder.AddAttribute(32, "value", Microsoft.AspNetCore.Components.BindConverter.FormatValue(
#nullable restore
#line 35 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                                              vaccine

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(33, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => vaccine = __value, vaccine));
            __builder.SetUpdatesAttributeName("value");
            __builder.CloseElement();
            __builder.AddMarkupContent(34, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(35, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(36, "\r\n");
            __builder.OpenElement(37, "p");
            __builder.AddMarkupContent(38, "\r\n    ");
            __builder.AddMarkupContent(39, "<span>\r\n        Enter AgeGroup Above 45 Or Below :\r\n    </span>\r\n    ");
            __builder.OpenElement(40, "span");
            __builder.AddMarkupContent(41, "\r\n        ");
            __builder.OpenElement(42, "input");
            __builder.AddAttribute(43, "placeholder", "above/below");
            __builder.AddAttribute(44, "value", Microsoft.AspNetCore.Components.BindConverter.FormatValue(
#nullable restore
#line 43 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                                       ageGrp

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(45, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => ageGrp = __value, ageGrp));
            __builder.SetUpdatesAttributeName("value");
            __builder.CloseElement();
            __builder.AddMarkupContent(46, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(47, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(48, "\r\n");
            __builder.OpenElement(49, "button");
            __builder.AddAttribute(50, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 46 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                  FindCenters

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(51, "Find Centers");
            __builder.CloseElement();
            __builder.AddMarkupContent(52, "\r\n");
#nullable restore
#line 47 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
 if (flag)
{
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 49 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
     if (flagSlot)
    {

#line default
#line hidden
#nullable disable
            __builder.AddContent(53, "        ");
            __builder.AddMarkupContent(54, "<p><em>Loading...</em></p>\r\n");
#nullable restore
#line 52 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
    }
    else
    {
        if (slotResponse.slot.Count != 0)
        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(55, "            ");
            __builder.OpenElement(56, "p");
            __builder.AddMarkupContent(57, "\r\n                Slots Available: ");
            __builder.AddContent(58, 
#nullable restore
#line 58 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                  slotResponse.slot.Count

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(59, "\r\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(60, "\r\n            ");
            __builder.OpenElement(61, "table");
            __builder.AddAttribute(62, "class", "table");
            __builder.AddMarkupContent(63, "\r\n                ");
            __builder.AddMarkupContent(64, @"<thead>
                    <tr>
                        <th>Dose</th>
                        <th>Address</th>
                        <th>District Name</th>
                        <th>Fee</th>
                        <th>Min_Age_Limit</th>
                        <th>Name</th>
                        <th>Pincode</th>
                        <th>State Name</th>
                        <th>Vaccine</th>
                    </tr>
                </thead>
                ");
            __builder.OpenElement(65, "tbody");
            __builder.AddMarkupContent(66, "\r\n");
#nullable restore
#line 75 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                     foreach (var slots in slotResponse.slot)
                    {

#line default
#line hidden
#nullable disable
            __builder.AddContent(67, "                        ");
            __builder.OpenElement(68, "tr");
            __builder.AddMarkupContent(69, "\r\n");
#nullable restore
#line 78 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                             if (slots.available_capacity_dose1 != 0)
                            {

#line default
#line hidden
#nullable disable
            __builder.AddContent(70, "                                ");
            __builder.OpenElement(71, "td");
            __builder.AddContent(72, 
#nullable restore
#line 80 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                     slots.available_capacity_dose1

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(73, "\r\n");
#nullable restore
#line 81 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                            }
                            else if (slots.available_capacity_dose2 != 0)
                            {

#line default
#line hidden
#nullable disable
            __builder.AddContent(74, "                                ");
            __builder.OpenElement(75, "td");
            __builder.AddContent(76, 
#nullable restore
#line 84 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                     slots.available_capacity_dose2

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(77, "\r\n");
#nullable restore
#line 85 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                            }

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(78, "\r\n                            ");
            __builder.OpenElement(79, "td");
            __builder.AddContent(80, 
#nullable restore
#line 87 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                 slots.address

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(81, "\r\n                            ");
            __builder.OpenElement(82, "td");
            __builder.AddContent(83, 
#nullable restore
#line 88 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                 slots.district_name

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(84, "\r\n                            ");
            __builder.OpenElement(85, "td");
            __builder.AddContent(86, 
#nullable restore
#line 89 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                 slots.fee

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(87, "\r\n                            ");
            __builder.OpenElement(88, "td");
            __builder.AddContent(89, 
#nullable restore
#line 90 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                 slots.min_age_limit

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(90, "\r\n                            ");
            __builder.OpenElement(91, "td");
            __builder.AddContent(92, 
#nullable restore
#line 91 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                 slots.name

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(93, "\r\n                            ");
            __builder.OpenElement(94, "td");
            __builder.AddContent(95, 
#nullable restore
#line 92 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                 slots.pincode

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(96, "\r\n                            ");
            __builder.OpenElement(97, "td");
            __builder.AddContent(98, 
#nullable restore
#line 93 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                 slots.state_name

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(99, "\r\n                            ");
            __builder.OpenElement(100, "td");
            __builder.AddContent(101, 
#nullable restore
#line 94 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
                                 slots.vaccine

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(102, "\r\n                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(103, "\r\n");
#nullable restore
#line 96 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"


                    }

#line default
#line hidden
#nullable disable
            __builder.AddContent(104, "                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(105, "\r\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(106, "\r\n");
#nullable restore
#line 101 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
        }
        else
        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(107, "            ");
            __builder.AddMarkupContent(108, "<p>No Slots are Present</p>\r\n");
#nullable restore
#line 105 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
        }
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 106 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
     
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 110 "E:\leaningnetlify\WebApplication12\WebApplication12\Pages\Counter.razor"
       
    private string responseBody;
    private string forecasts;
    private string dose;
    private string vaccine;
    private string ageGrp;
    private bool flagSlot;
    private string date;
    private string doseinp;

    private List<string> templates;

    private bool flag;
    private bool finalFlag;

    public List<string> pincodes;

    public SlotResponse slotResponse;

    protected override Task OnInitializedAsync()
    {
        flag = false;
        flagSlot = true;
        DateTime dateTime = DateTime.UtcNow.Date;
        date = dateTime.ToString("dd/MM/yyyy");
        pincodes = new List<string>();
        return base.OnInitializedAsync();
    }

    public async Task FindCenters()
    {
        if (flag)
        {
            flag = false;
        }
        slotResponse = new SlotResponse();
        flag = true;
        flagSlot = true;
        slotResponse.slot = new List<slot>();

        var dateinp = date;
        if (string.IsNullOrEmpty(date))
        {
            dateinp = "nothing";
        }
        else
        {
            dateinp = dateinp.Replace('/', '@');
        }

        try
        {
            dose = doseinp;
            if (dose.ToLower() == "first")
            {
                dose = "available_capacity_dose1";
            }
            else if (dose.ToLower() == "second")
            {
                dose = "available_capacity_dose2";
            }
            for (int i = 110001; i <= 110096; i++)
            {
                pincodes.Add(i.ToString());
            }
            var age = 0;
            if (ageGrp.ToLower() == "above")
            {
                age = 45;
            }
            if (date == "nothing")
            {
                DateTime dateTime = DateTime.UtcNow.Date;
                date = dateTime.ToString("dd/MM/yyyy");
            }
            if (vaccine.Contains("x") || vaccine.Contains("X"))
            {
                vaccine = "COVAXIN";
            }
            else
            {
                vaccine = "COVISHIELD";
            }
            foreach (var pincode in pincodes)
            {
                var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("GET"),
                    RequestUri = new Uri("https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=" + pincode + "&date=" + date + "&vaccine=" + vaccine)
                };
                var response = await Http.SendAsync(requestMessage);
                var responseStatusCode = response.StatusCode;
                var asd = responseStatusCode.ToString();
                if (responseStatusCode.ToString() == "OK")
                {
                    var strContent = await response.Content.ReadAsStringAsync();
                    var responseFromSlot = JsonConvert.DeserializeObject<Root>(strContent);
                    foreach (var value in responseFromSlot.sessions)
                    {
                        slot slot = new slot();
                        if (age >= 45)
                        {
                            if (dose == "available_capacity_dose1")
                            {
                                if (value.available_capacity_dose1 > 0 && vaccine == value.vaccine && value.min_age_limit == 45)
                                {
                                    slot.address = value.address;
                                    slot.available_capacity_dose1 = value.available_capacity_dose1;
                                    slot.district_name = value.district_name;
                                    slot.fee = value.fee;
                                    slot.pincode = value.pincode;
                                    slot.name = value.name;
                                    slot.vaccine = value.vaccine;
                                    slot.min_age_limit = value.min_age_limit;
                                    slot.state_name = value.state_name;
                                    slotResponse.slot.Add(slot);
                                }
                            }
                            else if (value.available_capacity_dose2 > 0 && vaccine == value.vaccine && value.min_age_limit == 45)
                            {
                                slot.address = value.address;
                                slot.available_capacity_dose1 = value.available_capacity_dose2;
                                slot.district_name = value.district_name;
                                slot.fee = value.fee;
                                slot.pincode = value.pincode;
                                slot.name = value.name;
                                slot.vaccine = value.vaccine;
                                slot.min_age_limit = value.min_age_limit;
                                slot.state_name = value.state_name;
                                slotResponse.slot.Add(slot);
                            }
                        }
                        else
                        {
                            if (dose == "available_capacity_dose1")
                            {
                                if (value.available_capacity_dose1 > 0 && vaccine == value.vaccine && value.min_age_limit == 18)
                                {
                                    slot.address = value.address;
                                    slot.available_capacity_dose1 = value.available_capacity_dose1;
                                    slot.district_name = value.district_name;
                                    slot.fee = value.fee;
                                    slot.pincode = value.pincode;
                                    slot.name = value.name;
                                    slot.vaccine = value.vaccine;
                                    slot.min_age_limit = value.min_age_limit;
                                    slot.state_name = value.state_name;
                                    slotResponse.slot.Add(slot);
                                }
                            }
                            else if (value.available_capacity_dose2 > 0 && vaccine == value.vaccine && value.min_age_limit == 18)
                            {
                                slot.address = value.address;
                                slot.available_capacity_dose1 = value.available_capacity_dose2;
                                slot.district_name = value.district_name;
                                slot.fee = value.fee;
                                slot.pincode = value.pincode;
                                slot.name = value.name;
                                slot.min_age_limit = value.min_age_limit;
                                slot.state_name = value.state_name;
                                slot.vaccine = value.vaccine;
                                slotResponse.slot.Add(slot);
                            }
                        }
                    }
                }
            }
            if (slotResponse.slot.Count != 0)
            {
                flagSlot = false;
                StateHasChanged();
            }
            else
            {
                flagSlot = false;
                StateHasChanged();
            }

        }
        catch (Exception ex)
        {
            throw (ex);
        }
    }

    //private async Task PostRequest()
    //{
    //    DateTime dateTime = DateTime.UtcNow.Date;
    //    var dateInp = dateTime.ToString("dd/MM/yyyy");
    //    var requestMessage = new HttpRequestMessage()
    //    {
    //        Method = new HttpMethod("GET"),
    //        RequestUri = new Uri("https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=110085&date=09-06-2021&vaccine=COVISHIELD"),
    //        //Content =
    //        //    JsonContent.Create(new TodoItem
    //        //    {
    //        //        Name = "My New Todo Item",
    //        //        IsComplete = false
    //        //    })

    //    };
    //    var response = await Http.SendAsync(requestMessage);
    //    var responseStatusCode = response.StatusCode;

    //    responseBody = await response.Content.ReadAsStringAsync();
    //    //var tokenResult = await TokenProvider.RequestAccessToken();

    //    //if (tokenResult.TryGetToken(out var token))
    //    //{
    //    //    requestMessage.Headers.Authorization =
    //    //        new AuthenticationHeaderValue("Bearer", token.Value);

    //    //    requestMessage.Content.Headers.TryAddWithoutValidation(
    //    //        "x-custom-header", "value");

    //    //    var response = await Http.SendAsync(requestMessage);
    //    //    var responseStatusCode = response.StatusCode;

    //    //    responseBody = await response.Content.ReadAsStringAsync();
    //    //}
    //}

    //public class TodoItem
    //{
    //    public long Id { get; set; }
    //    public string Name { get; set; }
    //    public bool IsComplete { get; set; }
    //}

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
